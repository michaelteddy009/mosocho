{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Day 05 - Python Programming: Dictionaries","provenance":[{"file_id":"1mWDmqFLGFzMf26YU8gs6N4jwyMnpSOCV","timestamp":1583820003846}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"eOm53BqKoYpl","colab_type":"text"},"source":["<font color=\"green\">*To start working on this notebook, or any other notebook that we will use in this course, we will need to save our own copy of it. We can do this by clicking File > Save a Copy in Drive. We will then be able to make edits to our own copy of this notebook.*</font>\n","\n","---\n","\n"]},{"cell_type":"markdown","metadata":{"id":"w2gnEI4V253l","colab_type":"text"},"source":["# Python Programming: Dictionaries"]},{"cell_type":"markdown","metadata":{"id":"aEqAjTGi3E3b","colab_type":"text"},"source":["## 1.0 Overview\n"]},{"cell_type":"markdown","metadata":{"id":"nJhH3J6y3dBD","colab_type":"text"},"source":["A dictionary is a collection of key-value pairs, which are unordered, changeable and indexed. Curly brackets are used when writing a dictionary."]},{"cell_type":"markdown","metadata":{"id":"a90lkqj_3IZr","colab_type":"text"},"source":["## 1.1 Creating a Dictionary"]},{"cell_type":"code","metadata":{"id":"8XQMBtIU7EoL","colab_type":"code","outputId":"ef20e38e-bf87-4787-bec1-a03dbd4b3f2c","executionInfo":{"status":"ok","timestamp":1583830253351,"user_tz":-180,"elapsed":1517,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 1\n","# We can create a dictionary by placing a sequence of elements within curly braces, \n","# separated by commas as show in the following example.\n","# Let's create a dictionary my_new_friend\n","# \n","my_new_friend = {\n","    'name':'Femi', \n","    'age': 24\n","}\n","\n","# print \n","print(my_new_friend)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'name': 'Femi', 'age': 24}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dg_8-2YO7EE3","colab_type":"code","outputId":"cc422dc1-e28c-4fac-d934-7eefcea104c1","executionInfo":{"status":"ok","timestamp":1583830254674,"user_tz":-180,"elapsed":2766,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 2\n","# Let's create another dictionary car with keys; brand, model and year\n","# \n","car =\t{\n","  'brand': 'Toyota',\n","  'model': 'Prado',\n","  'year': 2007\n","}\n","\n","# Then display it to see what the dictionary contains\n","print(car)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'brand': 'Toyota', 'model': 'Prado', 'year': 2007}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KiVcQaXH7D0R","colab_type":"code","outputId":"2452fd0b-c3ee-461e-cf1e-1a3e19262144","executionInfo":{"status":"ok","timestamp":1583830254676,"user_tz":-180,"elapsed":2716,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 3\n","# Let's create another dictionary\n","#\n","our_class = {\n","    'Name': '7 East', \n","    'Students': 27, \n","    'Wing': 'East'\n","}\n","\n","# printing out our_class\n","print(our_class)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'Name': '7 East', 'Students': 27, 'Wing': 'East'}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"49K6mQJg7yUh","colab_type":"text"},"source":["### 1.1 Challenges"]},{"cell_type":"code","metadata":{"id":"v5e2By6E76hW","colab_type":"code","outputId":"2613bba7-96b6-41ae-802e-71142b418c48","executionInfo":{"status":"ok","timestamp":1583830254678,"user_tz":-180,"elapsed":2660,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 1\n","# Create a dictionary family with keys i.e. father,\n","# mother, son and daughter. You can add values of your family\n","# to the key values\n","# \n","family = {\n","    'Father': 'Ochara Michael',\n","    'Mother': 'Mama',\n","    'Son': 'Blake',\n","    'Daughter': 'Sha'\n","\n","}\n","\n","print(family)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'Father': 'Ochara Michael', 'Mother': 'Mama', 'Son': 'Blake', 'Daughter': 'Sha'}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tpBdeH5275i9","colab_type":"code","outputId":"dc16d6e4-1934-4ea4-93ee-438f8392c336","executionInfo":{"status":"ok","timestamp":1583830254681,"user_tz":-180,"elapsed":2608,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 2\n","# Create a dictionary name powers_dictionary using numbers 1-5 as keys \n","# and their square power as values.  \n","#\n","\n","powers_dictionary = {\n","    1: 1,\n","    2: 4,\n","    3: 9,\n","    4: 16,\n","    5:25\n","}\n","\n","print(powers_dictionary)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{1: 1, 2: 4, 3: 9, 4: 16, 5: 25}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yf9bGNKEKsFF","colab_type":"code","outputId":"5dd85311-a1bf-4e54-81f2-20d9c4e14332","executionInfo":{"status":"ok","timestamp":1583830254682,"user_tz":-180,"elapsed":2556,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 3\n","# A caterer offers three different food packages; \n","# bronze package: starch:rice stew:chicken curry vegetable:cabbages desert:melon\n","# silver package: starch:rice and chappati  stew:beef curry vegetable:spinach desert:melon and bananas\n","# gold package: starch:rice, chappati and mukimo stew: beef curry vegetable:spinach and managu desert: tart\n","# Create a dictionary that stores the above information then preview it\n","# Hint: You can store a dictionary within a dictionary \n","# \n","food_packages = {\n","    'Bronze':{\n","        'starch':['rice'],\n","        'stew': ['chicken curry'],\n","        'vegetable': ['Cabbage'],\n","        'desert': ['melon']\n","    },\n","    'Silver':{\n","        'starch': ['rice', 'chapati'],\n","        'stew': ['beef curry'],\n","        'vegetable': ['spinach', 'mango'],\n","        'desert': ['tart']\n","    },\n","    'gold':{\n","        'starch': ['rice', 'chapati','mukimo'],\n","        'stew': ['beef curry'],\n","        'vegetable': ['spinach', 'mango'],\n","    }\n","}\n","\n","print(food_packages['gold']['starch'])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["['rice', 'chapati', 'mukimo']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"UU3YIJYI3gwc","colab_type":"text"},"source":["## 1.2 Adding Elements to a Dictionary"]},{"cell_type":"code","metadata":{"id":"t-dKvalj7F44","colab_type":"code","outputId":"3ad9097b-ffff-4aeb-fce3-afcc6526e7af","executionInfo":{"status":"ok","timestamp":1583830254684,"user_tz":-180,"elapsed":2544,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 1 \n","# Adding a residence to my_new_friend dictionary that we had initially created\n","# \n","my_new_friend['residence'] = 'Nairobi'  \n","\n","# print out my_new_friend\n","print(my_new_friend)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'name': 'Femi', 'age': 24, 'residence': 'Nairobi'}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FsS9Ns-b7FnE","colab_type":"code","outputId":"bd550999-9ff8-423c-e612-680512fd999e","executionInfo":{"status":"ok","timestamp":1583830254685,"user_tz":-180,"elapsed":2531,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 2\n","# We now add color to our car dictionary\n","#\n","car[\"color\"] = \"light gray\"\n","\n","# and print out our dictionary\n","print(car)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'brand': 'Toyota', 'model': 'Prado', 'year': 2007, 'color': 'light gray'}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GFY3EYiO7FcZ","colab_type":"code","outputId":"461782f5-7486-426e-ac33-b9adc69508fd","executionInfo":{"status":"ok","timestamp":1583830254685,"user_tz":-180,"elapsed":2518,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 3\n","# Adding the school to the dictionary\n","#\n","our_class['School'] = \"Moringa School\";\n","\n","# printing out our class to see the updates\n","print(our_class)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'Name': '7 East', 'Students': 27, 'Wing': 'East', 'School': 'Moringa School'}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"7tzKw6l87-5h","colab_type":"text"},"source":["### 1.2 Challenges"]},{"cell_type":"code","metadata":{"id":"jqbEx0BU8EL4","colab_type":"code","outputId":"9a01ff30-6461-419e-91b2-2d6367d9b806","executionInfo":{"status":"ok","timestamp":1583830277510,"user_tz":-180,"elapsed":25331,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":176}},"source":["# Challenge 1: \n","# Naivas Supermarket sells two products: bread and milk. \n","# A loaf of bread weighs 400 grams. Each packet of milk is 0.5 litre. \n","# Write a program that reads the number of bread \n","# and the number of packets of milk in an order from the user. \n","# Then your program should compute and display the total quantity of the order.\n","# You should store the order in the dictionary and \n","# prompt the user for another input.\n","# \n","print(\"Place you orders please\")\n","mkate = input(\"How many bread ? \")\n","maziwa = input(\"How many packets of milk ? \")\n","\n","while mkate != 'q' or maziwa != 'q':\n","  orders = {\n","      'bread': mkate,\n","      'milk': maziwa \n","  }\n","\n","  total_bread_quantitiy = int(orders['bread']) * 400\n","  total_milk_quantity = int(orders['milk']) * 0.5\n","\n","  print(f\"You have ordered {total_bread_quantitiy} grams of bread and {total_milk_quantity} litres of milk\")\n","  print(\"\\n\\nPlace another order please (press q to quit)\")\n","  mkate = input(\"How many bread ? \")\n","  maziwa = input(\"How many packets of milk ? \")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Place you orders please\n","How many bread ? 5\n","How many packets of milk ? 6\n","You have ordered 2000 grams of bread and 3.0 litres of milk\n","\n","\n","Place another order please (press q to quit)\n","How many bread ? q\n","How many packets of milk ? q\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gQTOkgy2kgLT","colab_type":"code","outputId":"26bdc37e-efc4-4543-a6a9-8267bbedbfb1","executionInfo":{"status":"ok","timestamp":1583830287542,"user_tz":-180,"elapsed":35349,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":87}},"source":["# Challenge 2:\n","# Two words are anagrams if they contain all of the same letters, \n","# but in a different order. For example, “evil” and “live” \n","# are anagrams because each contains one e, one i, one l, and one v. \n","# Create a program that reads two strings from the user, determines\n","# whether or not they are anagrams, stores and reports the result.\n","# Use a dictionary to solve this problem.\n","# \n","\n","print(\"Place enter two strings to determine if it's an anagram\")\n","ya_kwanza = input(\"First string \")\n","ya_pili = input(\"Second string \")\n","\n","words_dict = {\n","    'first_word': ya_kwanza,\n","    'second_word': ya_pili\n","}\n","\n","first = words_dict['first_word']\n","second = words_dict['second_word']\n","\n","for x in first:\n","  if x in second:\n","    second = second.replace(x, '')\n","  else:\n","    break\n","\n","if len(second) == 0:\n","  print(f\"{ya_kwanza} and {ya_pili} are anagrams.\")\n","else:\n","  print(f\"\\n{ya_kwanza} and {ya_pili} are not anagrams.\")\n","  "],"execution_count":0,"outputs":[{"output_type":"stream","text":["Place enter two strings to determine if it's an anagram\n","First string live\n","Second string evil\n","live and evil are anagrams.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3pcE1f56f87G","colab_type":"code","outputId":"323a1480-4895-4394-ecb7-ab588777b2af","executionInfo":{"status":"ok","timestamp":1583830297315,"user_tz":-180,"elapsed":45108,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"source":["# Challenge 3:\n","# Create a program that determines and displays \n","# the number of characters in a string entered by the user. \n","# For example, \"Hello, World!\" has 13  characters while \n","# abc has only three character. \n","# Use a dictionary to solve this problem.\n","# \n","\n","user_input = input('How would you like to be entertained ? ')\n","\n","input_dict = {\n","    \n","}\n","\n","input_dict['data_in'] = user_input\n","\n","print(f\"\\nThe user has inputed {len(input_dict['data_in'])} characters\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["How would you like to be entertained ? sometimes music\n","\n","The user has inputed 15 characters\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"hzmMe5TP32ra","colab_type":"text"},"source":["## 1.3 Updating Elements in a Dictionary"]},{"cell_type":"code","metadata":{"id":"J66GyFzt7I_X","colab_type":"code","outputId":"804c5e62-281d-4d67-93f1-939abe1d9343","executionInfo":{"status":"ok","timestamp":1583830297317,"user_tz":-180,"elapsed":45097,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 1\n","# Let's update age on the dictionary my_new_friend \n","#\n","my_new_friend['age'] = 24\n","\n","# print out\n","print(my_new_friend)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'name': 'Femi', 'age': 24, 'residence': 'Nairobi'}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zhJabm-I7Jr4","colab_type":"code","outputId":"c83f90d7-3f0f-42df-933d-5720fdd7a99c","executionInfo":{"status":"ok","timestamp":1583830297318,"user_tz":-180,"elapsed":45065,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 2\n","# Let's update our dictionary my_new_friend\n","#\n","car[\"color\"] = \"light gray\"\n","\n","# and print out our dictionary\n","print(car)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'brand': 'Toyota', 'model': 'Prado', 'year': 2007, 'color': 'light gray'}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PbbAVPsO7JfJ","colab_type":"code","outputId":"23dfe12e-cc59-4313-b642-38e006b72e4b","executionInfo":{"status":"ok","timestamp":1583830297320,"user_tz":-180,"elapsed":45025,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 3\n","# Updating our class \n","#\n","our_class['Students'] = 29;\n","\n","# printing out our class to see the updates\n","print(our_class)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'Name': '7 East', 'Students': 29, 'Wing': 'East', 'School': 'Moringa School'}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Hp9Jaf8V8PE1","colab_type":"text"},"source":["### 1.3 Challenges"]},{"cell_type":"code","metadata":{"id":"LcK4RI6K8Qrp","colab_type":"code","outputId":"bb731927-efa3-409f-cd65-a2128edc2534","executionInfo":{"status":"ok","timestamp":1583830297321,"user_tz":-180,"elapsed":44995,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 1\n","# Let's update the value of the son and daughter keys of the family dictionary \n","# that we had earlier on created\n","#\n","family['Son'] = 'Jade'\n","family['Daughter'] = 'Tamara'\n","print(family)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'Father': 'Ochara Michael', 'Mother': 'Mama', 'Son': 'Jade', 'Daughter': 'Tamara'}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EEU_gZax8RN6","colab_type":"code","outputId":"02c2c5e4-fe8e-4dd9-98cf-6b7f35344357","executionInfo":{"status":"ok","timestamp":1583830297324,"user_tz":-180,"elapsed":44966,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":212}},"source":["# Challenge 2\n","# Update value of the gold package in the caterer dictionary to \n","# have vegetable as spinach, cabbage and managu\n","#\n","food_packages['gold']['vegetable'] = ['spinach', 'cabbage', 'managu']\n","food_packages"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Bronze': {'desert': ['melon'],\n","  'starch': ['rice'],\n","  'stew': ['chicken curry'],\n","  'vegetable': ['Cabbage']},\n"," 'Silver': {'desert': ['tart'],\n","  'starch': ['rice', 'chapati'],\n","  'stew': ['beef curry'],\n","  'vegetable': ['spinach', 'mango']},\n"," 'gold': {'starch': ['rice', 'chapati', 'mukimo'],\n","  'stew': ['beef curry'],\n","  'vegetable': ['spinach', 'cabbage', 'managu']}}"]},"metadata":{"tags":[]},"execution_count":116}]},{"cell_type":"code","metadata":{"id":"jMEwHQI18RCX","colab_type":"code","outputId":"4052d511-7a2c-4890-fefe-c7cbb3e937f8","executionInfo":{"status":"ok","timestamp":1583830316873,"user_tz":-180,"elapsed":64492,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 3\n","# Upon creating the Naivas supermarket dictionary program earlier on,\n","# We will now extend the functionality of your program to be able to also update\n","# the quantity of either the bread or packet of milk.\n","# Write another program the will prompt the user to indicate whether they want\n","# to update the quantity of the product or compute the total quantity of the total order.\n","# Using if statements, your program should execute either to the code you had earlier\n","# on written or to the new code for updating that you will now write\n","#\n","print(\"Place you orders please\")\n","mkate = int(input(\"How many bread ? \"))\n","maziwa = int(input(\"How many packets of milk ? \"))\n","\n","change_quantity = input(\"\\nWould you like to change the quatities [yes/no]\")\n","\n","orders = {\n","    'bread': mkate,\n","     'milk': maziwa,\n","     'bread_quantity': 400,\n","     'milk_quantity': 0.5 \n","}\n","\n","if change_quantity == 'yes':\n","  bread_qua = input(\"Inpute the bread quatity to use ?\")\n","  milk_qua = input(\"Input the milk quantity to use ?\")\n","  orders['bread_quantity'] = float(bread_qua)\n","  orders['milk_quantity'] = float(milk_qua)\n","\n","total_bread_quantitiy = int(orders['bread']) * orders['bread_quantity']\n","total_milk_quantity = int(orders['milk']) * orders['bread_quantity']\n","\n","print(f\"\\nYou have ordered {total_bread_quantitiy} grams of bread and {total_milk_quantity} litres of milk\")\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Place you orders please\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"50S5D_qI3kDD","colab_type":"text"},"source":["## 1.4 Accessing Elements from a Dictionary"]},{"cell_type":"code","metadata":{"id":"ZBJa2FHU7Muf","colab_type":"code","outputId":"7da6cfaa-2e7e-4636-c4ae-7b8554130da0","executionInfo":{"status":"ok","timestamp":1583830316875,"user_tz":-180,"elapsed":64466,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["# Example 1\n","# Accessing my_new_friend dictionary \n","#\n","name_a = my_new_friend[\"name\"]\n","\n","# print name_a\n","print(name_a)\n","\n","# or we could also\n","name_b = my_new_friend.get(\"name\")\n","\n","# print name_b\n","print(name_b)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Femi\n","Femi\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"A8ggbH347NPz","colab_type":"code","outputId":"4d91f944-48ce-4f59-f42a-9920133935d8","executionInfo":{"status":"ok","timestamp":1583830316877,"user_tz":-180,"elapsed":64441,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["# Example 2\n","# Accessing the model in the car dictionary\n","#\n","car_a = car[\"model\"]\n","\n","# print car_a\n","print(car_a)\n","\n","# or we could also\n","car_b = car.get(\"model\")\n","\n","# print name_b\n","print(car_b)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Prado\n","Prado\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"eaZxBKDf7NF4","colab_type":"code","outputId":"6bc00999-f748-447c-919c-dc8529f73b3f","executionInfo":{"status":"ok","timestamp":1583830316880,"user_tz":-180,"elapsed":64411,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 3\n","# Accessing the name in our_class dictionary\n","#\n","our_class_a = our_class[\"Name\"]\n","\n","# or we could also\n","our_class_b = our_class.get(\"Name\")\n","\n","# print our_class_b \n","print(our_class_b)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["7 East\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"mqnSUp-a8I65","colab_type":"text"},"source":["### 1.4 Challenges"]},{"cell_type":"code","metadata":{"id":"uE_DKh_N8XMj","colab_type":"code","outputId":"4ea78bc6-1218-445c-9c85-26ce43a40777","executionInfo":{"status":"ok","timestamp":1583830316884,"user_tz":-180,"elapsed":64385,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 1\n","# What is the power of 4 from the powers_dictionary\n","# \n","\n","power_of_4 = powers_dictionary[4]\n","print(power_of_4)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["16\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dt-ZmzrQ8YIM","colab_type":"code","outputId":"9e11dd2c-335c-42a3-9e94-1224075ab8e4","executionInfo":{"status":"ok","timestamp":1583830316884,"user_tz":-180,"elapsed":64364,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 2\n","# Let's access the silver package from our caterer dictionary\n","#\n","\n","silver_package = food_packages['Silver']\n","print(silver_package)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'starch': ['rice', 'chapati'], 'stew': ['beef curry'], 'vegetable': ['spinach', 'mango'], 'desert': ['tart']}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xLEaTJdY8X4t","colab_type":"code","outputId":"67f92455-a275-420e-dfd3-bc444f5372a8","executionInfo":{"status":"ok","timestamp":1583830316885,"user_tz":-180,"elapsed":64347,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 3\n","# Access the name of the father from the family dictionary\n","# \n","father = family['Father']\n","print(father)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Ochara Michael\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Amb1Bsrbwx6C","colab_type":"text"},"source":["## 1.5 Checking if a Key exists"]},{"cell_type":"code","metadata":{"id":"bcY3c6DHwwu2","colab_type":"code","outputId":"3a79260f-d5ee-4a7e-9113-df5c32b46dee","executionInfo":{"status":"ok","timestamp":1583830316886,"user_tz":-180,"elapsed":64332,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 1\n","# We can check if a specified key exists within a dictionary through the use of the `in` keyword;\n","# Let's check if the keyword residence exists in my_new_friend dictionary\n","# \n","if \"residence\" in my_new_friend:\n","  print(\"Yes, the keyword exists in the dictionary\")\n","else:\n","  print('No, the keyword does not exist in the dictionary')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Yes, the keyword exists in the dictionary\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KJYTGPMKw52k","colab_type":"code","outputId":"a6e9bc25-e943-4f2b-974b-1a53f29b1b47","executionInfo":{"status":"ok","timestamp":1583830316887,"user_tz":-180,"elapsed":64317,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 2\n","# Let's check if the keyword year exists in car dictionary\n","#\n","if \"year\" in car:\n","  print(\"Yes, the keyword exists in the dictionary\")\n","else:\n","  print('No, the keyword does not exist in the dictionary')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Yes, the keyword exists in the dictionary\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"U0sTioBMw5tU","colab_type":"code","outputId":"e9761fba-a196-4d29-eb86-8df3d8c26c10","executionInfo":{"status":"ok","timestamp":1583830316888,"user_tz":-180,"elapsed":64300,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 3\n","# Checking if the keyword Wing exists in our_class dictionary\n","#\n","if \"Wing\" in our_class:\n","  print(\"Yes, the keyword exists in the dictionary\")\n","else:\n","  print('No, the keyword does not exist in the dictionary')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Yes, the keyword exists in the dictionary\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"1OFB5fL1w6TM","colab_type":"text"},"source":["### 1.5 Challenges"]},{"cell_type":"code","metadata":{"id":"oUCqFuf_w--X","colab_type":"code","outputId":"9b2942b9-bcea-4a37-9fc3-993f30cb4daa","executionInfo":{"status":"ok","timestamp":1583830316888,"user_tz":-180,"elapsed":64283,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 1\n","# Does the model key exist in our car dictionary?\n","#\n","if 'model' in car:\n","  print(\"Yes, model exists\")\n","else:\n","  print(\"No, model does not exist\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Yes, model exists\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"y2KKTbcmw_jK","colab_type":"code","outputId":"06eade77-e1f4-47f9-aab7-05fb02343bc2","executionInfo":{"status":"ok","timestamp":1583830316891,"user_tz":-180,"elapsed":64269,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 2\n","# Does te\n","# Let's get the power of 6 from our already created powers dictionary\n","#\n","\n","if 6 in powers_dictionary:\n","  print(f\"Power of 6 is {powers_dictionary[6]}\")\n","else:\n","  print(f\"The value 6 is not a key in powers_dictionary\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["The value 6 is not a key in powers_dictionary\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"bGck3KPGw_HE","colab_type":"code","outputId":"b1a55e2d-b214-49fe-ea5a-9e69d37f6748","executionInfo":{"status":"ok","timestamp":1583830316892,"user_tz":-180,"elapsed":64254,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 3\n","# Let's find out if the diamond package exists in the caterer package\n","#\n","\n","if 'diamond' in food_packages:\n","  print(\"Yes, diamond does exist.\")\n","else:\n","  print(\"No, diamond is not in food_packages.\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["No, diamond is not in food_packages.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"GDrqXhcWzs6s","colab_type":"text"},"source":["## 1.6 The No. of elements in a Dictionary"]},{"cell_type":"code","metadata":{"id":"mQMc9N3TzvUA","colab_type":"code","outputId":"96abd07a-2690-44ac-c7ec-b4b216a1ccef","executionInfo":{"status":"ok","timestamp":1583830316892,"user_tz":-180,"elapsed":64236,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 1\n","# We can use keyword `len()` to determine how many items (key - value pairs) there are in the dictionary.\n","# Finding out how many items there are in the my_new_friend dictionary\n","#\n","print(len(my_new_friend))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YJbVoIfzzvkC","colab_type":"code","outputId":"6e813cea-96a8-42d0-f6cb-dfc4c7870577","executionInfo":{"status":"ok","timestamp":1583830316893,"user_tz":-180,"elapsed":64220,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 2\n","# Finding out how many items there are in the car dictionary\n","#\n","print(len(car))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ubNhcSttz050","colab_type":"code","outputId":"88b4d4bb-89d6-4603-95e8-9a0d837a3243","executionInfo":{"status":"ok","timestamp":1583830316894,"user_tz":-180,"elapsed":64204,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Example 3\n","# Finding out how many items there are in the our_class dictionary\n","#\n","print(len(our_class))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["4\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"zN0YcqMmzwGU","colab_type":"text"},"source":["### 1.6 Challenges"]},{"cell_type":"code","metadata":{"id":"9SWkSQvnz2bh","colab_type":"code","outputId":"bc66037e-3c59-44ff-c80f-5d11c8e92c15","executionInfo":{"status":"ok","timestamp":1583830316895,"user_tz":-180,"elapsed":64189,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 1\n","# Using the family dictionary, let's determine how many family members there are in the family?\n","#\n","print(len(family))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GKXla2_Qz2Lx","colab_type":"code","outputId":"b67b8047-4720-48ad-c1e7-d7d191688400","executionInfo":{"status":"ok","timestamp":1583830316895,"user_tz":-180,"elapsed":64173,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 2\n","# How many items have we stored in our anagrams dictionary?\n","# \n","print(len(words_dict))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"y1Yc0df-z2AG","colab_type":"code","outputId":"bb1234b5-75e4-40ed-d3d8-ace977c7c917","executionInfo":{"status":"ok","timestamp":1583830376970,"user_tz":-180,"elapsed":864,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challange 3\n","# Using the cater dictionary, how many meals do we have in our gold package? \n","# \n","print(len(food_packages['gold']))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["3\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"t3HfcEjn306L","colab_type":"text"},"source":["## 1.7 Removing Elements from a Dictionary"]},{"cell_type":"code","metadata":{"id":"g9zlKoiL7PaV","colab_type":"code","outputId":"771eb237-4761-439b-e448-03a3e609adf1","executionInfo":{"status":"error","timestamp":1583830405321,"user_tz":-180,"elapsed":1309,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":238}},"source":["# Example 1\n","# We can remove a specific item from the dictionary \n","# with the specified key name using the pop() method. \n","# The clear() method clears the items in the dictionary \n","# while the del keyword deletes the dictionary completely.\n","\n","\n","# Removing age from my_new_friend dictionary\n","updated_my_new_friend = my_new_friend.pop(\"age\")\n","\n","# printing out the updated dictionary\n","print(updated_my_new_friend)\n","\n","# now clearing the dictionary \n","updated_my_new_friend.clear()\n","\n","\n","# printing out the cleared dictionary\n","print(updated_my_new_friend)\n","\n","# deleting the dictionary completely\n","del updated_my_new_friend"],"execution_count":0,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-138-5eb38b1936a7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mupdated_my_new_friend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmy_new_friend\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"age\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# printing out the updated dictionary\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mupdated_my_new_friend\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'age'"]}]},{"cell_type":"code","metadata":{"id":"JAKiQ6y97PMq","colab_type":"code","outputId":"2e98e959-2eae-4444-fe4a-eabcfa278ca5","executionInfo":{"status":"error","timestamp":1583830408585,"user_tz":-180,"elapsed":1604,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":238}},"source":["# Example 2\n","# Removing model from car dictionary\n","\n","# using the pop method\n","updated_car = car.pop(\"model\")\n","\n","# printing out the updated car dictionary\n","print(updated_car)\n","\n","# now clearing the dictionary \n","updated_car.clear()\n","\n","# printing out the cleared dictionary\n","print(updated_car)\n","\n","# deleting the dictionary completely\n","del updated_car"],"execution_count":0,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-139-13937503a3c1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mupdated_car\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcar\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"model\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# printing out the updated car dictionary\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mupdated_car\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'model'"]}]},{"cell_type":"code","metadata":{"id":"hJDrF-_i7OzG","colab_type":"code","outputId":"d7344cc2-6487-4e20-fcda-a32c4d9bde7a","executionInfo":{"status":"ok","timestamp":1583830411268,"user_tz":-180,"elapsed":1200,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["# Example 3\n","# Removing School from our_class dictionary\n","\n","# using the pop method\n","our_class.pop(\"School\")\n","\n","# printing out the updated our_class dictionary\n","print(our_class)\n","\n","# now clearing the dictionary \n","our_class.clear()\n","\n","# printing out the cleared dictionary\n","print(our_class)\n","\n","# deleting the dictionary completely\n","del our_class"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'Name': '7 East', 'Students': 29, 'Wing': 'East'}\n","{}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ZSQ6Uyb98jUU","colab_type":"text"},"source":["### Challenges 1.7"]},{"cell_type":"code","metadata":{"id":"SJv-VzAa8liR","colab_type":"code","outputId":"1cb3ecd5-e1fc-47c5-a255-882df41dcc43","executionInfo":{"status":"error","timestamp":1583828734238,"user_tz":-180,"elapsed":1210,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":185}},"source":["# Challenge 1\n","# Let's delete our family dictionary\n","#\n","del family"],"execution_count":0,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-94-5e4f2f4a3897>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mdel\u001b[0m \u001b[0mfamily\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfamily\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'family' is not defined"]}]},{"cell_type":"code","metadata":{"id":"RtPPDlUg8mdN","colab_type":"code","outputId":"0aab3a66-2899-4c0a-e899-1b9c8a4ff55f","executionInfo":{"status":"ok","timestamp":1583830413725,"user_tz":-180,"elapsed":666,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Challenge 2\n","# Let's clear our anagrams dictionary\n","#\n","words_dict.clear()\n","print(words_dict)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"de_1tLbS8mNr","colab_type":"code","outputId":"00932e05-962f-40e3-96cd-561157673339","executionInfo":{"status":"ok","timestamp":1583830483790,"user_tz":-180,"elapsed":68071,"user":{"displayName":"Michael Teddy","photoUrl":"","userId":"05465468862126933935"}},"colab":{"base_uri":"https://localhost:8080/","height":176}},"source":["# Challenge 3\n","# Let's add another fuctionality to our Naivas Supermarket program\n","# The program will be updated to request the user to whether to delete \n","# any product. If so, the user should perform the deletion respectively.\n","#\n","\n","print(\"Place you orders please\")\n","mkate = int(input(\"How many bread ? \"))\n","maziwa = int(input(\"How many packets of milk ? \"))\n","\n","change_quantity = input(\"\\nWould you like to change the quatities [yes/no]\")\n","\n","orders = {\n","    'bread': mkate,\n","     'milk': maziwa,\n","     'bread_quantity': 400,\n","     'milk_quantity': 0.5 \n","}\n","\n","if change_quantity == 'yes':\n","  bread_qua = input(\"Inpute the bread quatity to use ?\")\n","  milk_qua = input(\"Input the milk quantity to use ?\")\n","  orders['bread_quantity'] = float(bread_qua)\n","  orders['milk_quantity'] = float(milk_qua)\n","\n","total_bread_quantitiy = int(orders['bread']) * orders['bread_quantity']\n","total_milk_quantity = int(orders['milk']) * orders['bread_quantity']\n","\n","#to remove a product\n","prompt_to_remove = input(\"\\nWould you like to remove any of the products [yes/no]: \")\n","\n","if prompt_to_remove == 'yes':\n","  item_to_remove = input(\"\\nInput the product you want to remove : \")\n","  del orders[item_to_remove]\n","\n","print(f\"\\nYou have ordered {total_bread_quantitiy} grams of bread and {total_milk_quantity} litres of milk\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Place you orders please\n","How many bread ? 5\n","How many packets of milk ? 6\n","\n","Would you like to change the quatities [yes/no]no\n","\n","Would you like to remove any of the products [yes/no]: no\n","\n","You have ordered 2000 grams of bread and 2400 litres of milk\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"qi-ZSgz_pjhy","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}